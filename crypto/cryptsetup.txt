
============================================================================================
cryptsetup
============================================================================================

--------------------------------------------------------------------------------------------
Create an encrypted Luks device, mount, close - One time only
--------------------------------------------------------------------------------------------

dd if=/dev/zero of=cryptfile bs=1M count=500
sudo losetup /dev/loop0 cryptfile
sudo losetup -a
badblocks -s -w -t random -v /dev/loop0
sudo modprobe aes
sudo cryptsetup -y luksFormat -c aes -s 256 /dev/loop0
sudo cryptsetup luksOpen /dev/loop0 crypt_fun		<<-- Create dm device 'crypt_fun'
sudo mkfs.ext3 -j /dev/mapper/crypt_fun
sudo e2fsck -f /dev/mapper/crypt_fun
sudo cryptsetup luksClose crypt_fun
sudo losetup -d /dev/loop0

--------------------------------------------------------------------------------------------
Open Luks and mount and then umount and close - Each time 
--------------------------------------------------------------------------------------------
sudo cryptsetup luksOpen /dev/loop0 crypt_fun
sudo mount /dev/mapper/crypt_fun mnt

<-- Use the encrypted file system -->

sudo umount mnt
sudo cryptsetup luksClose crypt_fun
sudo losetup -d /dev/loop0

--------------------------------------------------------------------------------------------
Close the device and mapping
--------------------------------------------------------------------------------------------
sudo cryptsetup luksClose crypt_fun
sudo losetup -d /dev/loop0

--------------------------------------------------------------------------------------------
Advanced commands
--------------------------------------------------------------------------------------------
sudo cryptsetup luksAddKey /dev/loop0			<<-- Add a key to next available slot
sudo cryptsetup luksAddKey /dev/loop0 -S 5		<<-- Add a key to next slot 5
sudo cryptsetup luksDump /dev/loop0 | grep Slot		<<-- View slots

sudo cryptsetup luksRemoveKey /dev/loop0		<<-- Remove the first key with the mentioned passphrase
sudo cryptsetup luksKillSlot  /dev/loop0 5		<<-- Remove key from slot 5 with key from any other slot
sudo cryptsetup luksAddKey    /dev/loop0 keyfile -S 6	<<-- Add key from keyfile at slot 6

sudo cryptsetup luksDump --dump-master-key /dev/loop0	<<-- Dumps the master key in hex format

--------------------------------------------------------------------------------------------
Forgot key after mounting fs
--------------------------------------------------------------------------------------------

1. Find hex key
  sudo dmsetup table --showkeys 

<output:>
  crypt_fun: 0 1019904 crypt aes-cbc-plain 92c5f589373259d48dbb6e7b3b1b4cf5e0ec2d549f8c51fb118be48f60663207 0 7:0 4096

NB: This is the same as what you get when you run luksDump with '--dump-master-key' option

MK dump:	92 c5 f5 89 37 32 59 d4 8d bb 6e 7b 3b 1b 4c f5 
		e0 ec 2d 54 9f 8c 51 fb 11 8b e4 8f 60 66 32 07 

2. Store the hex key (After 'aes-cbc-plain') in a file. This is in postscript format.
   echo 92c5f589373259d48dbb6e7b3b1b4cf5e0ec2d549f8c51fb118be48f60663207 > existinglukskey.txt

3. Convert the hex file to binary
   xxd -r -p existinglukskey.txt existinglukskey.bin

   -r  : Convert from hex to binary
   -p  : Use plain hex or postscript format

4. Create a new key using this master key file
   cryptsetup luksAddKey /dev/loop0 --master-key-file existinglukskey.bin



--------------------------------------------------------------------------------------------
Reference
--------------------------------------------------------------------------------------------
http://www.thegeekstuff.com/2016/03/cryptsetup-lukskey/
https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Logical_Volume_Manager_Administration/device_mapper.html#dm-mappings
https://wiki.archlinux.org/index.php/Dm-crypt/Device_encryption


http://nelenkov.blogspot.co.uk/2015/05/hardware-accelerated-disk-encryption-in.html
https://nelenkov.blogspot.in/2014/10/revisiting-android-disk-encryption.html
http://source.android.com/devices/tech/encryption/index.html
http://www.chronox.de/crypto-API
http://www.logix.cz/michal/devel/cryptodev/cryptodev-20091126
http://www.saout.de/misc/dm-crypt
https://gitlab.com/cryptsetup/cryptsetup/wikis/DMCrypt
https://gitlab.com/cryptsetup/cryptsetup
Documentation/device-mapper/dm-crypt.txt

http://nelenkov.blogspot.jp/2012/08/changing-androids-disk-encryption.html
https://gitlab.com/cryptsetup/cryptsetup/wikis/DMCrypt
https://www.qualcomm.com/products/snapdragon/security
https://www.qualcomm.com/news/snapdragon/2014/11/07/cryptographic-module-snapdragon-805-fips-140-2-certified
http://nelenkov.blogspot.com/2014/10/revisiting-android-disk-encryption.html
https://www.tarsnap.com/scrypt.html




